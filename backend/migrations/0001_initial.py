# Generated by Django 3.0.2 on 2020-09-10 13:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerId', models.CharField(max_length=100, verbose_name='customer Id')),
                ('fullName', models.CharField(max_length=250, verbose_name='full name')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phoneNumber', models.CharField(max_length=50, verbose_name='phone Number')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=150, verbose_name='size')),
                ('price', models.IntegerField(verbose_name='price')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('flavour', models.CharField(max_length=200, verbose_name='flavour')),
                ('description', models.TextField(verbose_name='description')),
                ('price', models.IntegerField(verbose_name='price')),
                ('multipleSIzes', models.ManyToManyField(related_name='multiplesizes', to='backend.Size', verbose_name='multiplesizes')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderId', models.CharField(max_length=150, verbose_name='orderId')),
                ('quantity', models.IntegerField(verbose_name='quantity')),
                ('size', models.CharField(max_length=150, verbose_name='size')),
                ('price', models.IntegerField(verbose_name='price')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='backend.Product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'OrderedProduct',
                'verbose_name_plural': 'OrderedProducts',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderId', models.CharField(max_length=150, verbose_name='orderId')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Customer', verbose_name='customer')),
                ('orderProducts', models.ManyToManyField(related_name='orderedproducts', to='backend.OrderedProduct', verbose_name='orderedproducts')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('products', models.ManyToManyField(to='backend.Product', verbose_name='products')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
    ]
